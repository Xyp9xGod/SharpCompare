name: CI/CD - SharpCompare

permissions:
  statuses: write
  checks: write
  contents: write
  pull-requests: write
  actions: write

on:
  push:
    tags:
      - "v*.*.*"  # Trigger when a new tag vX.Y.Z is created
  pull_request:
    branches:
      - master 

jobs:
  build-test:
    name: Build & Test (.NET 8 and 9)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        dotnet: [ '8.0.x', '9.0.0' ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4  # Atualizado para versÃ£o mais recente

      - name: Install .NET ${{ matrix.dotnet }}
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet }}

      - name: Restore dependencies
        run: |
          dotnet restore src/SharpCompare/SharpCompare.csproj
          dotnet restore tests/SharpCompare.Tests/SharpCompare.Tests.csproj

      - name: Build the project
        run: |
          dotnet build src/SharpCompare/SharpCompare.csproj --configuration Release --no-restore
          dotnet build tests/SharpCompare.Tests/SharpCompare.Tests.csproj --configuration Release --no-restore

      - name: Run tests
        run: dotnet test tests/SharpCompare.Tests/SharpCompare.Tests.csproj --configuration Release --no-restore --verbosity normal

  publish:
    name: Publish to NuGet
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 9.0.0

      - name: Extract version from tag
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Package NuGet with version
        run: dotnet pack src/SharpCompare/SharpCompare.csproj --configuration Release --output nupkg /p:Version=${{ env.VERSION }}

      - name: Publish to NuGet
        run: dotnet nuget push nupkg/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json
